<%- include('includes/head.ejs') %>

<!--<script src="./public/javascripts/locations.js"></script>-->
<script>

    (function () {

        //============================================================================
        //a function that adds to the table the new data the user had submitted
        //============================================================================
        function fetch_locations_list(){
            console.log('in fetch_locations_list');


            let url = new URL('./api/locations_list', document.URL.toString());
            console.log("ure is: ", url);
            url.search = new URLSearchParams({'userId': 2});
            fetch(url)
                .then((response) => {
                    if (response.error){
                        document.querySelector("#data").innerHTML = "Some error occured when getting the list ";
                        return;
                        // handle the error
                        // if (response.status !== 200) {
                        //     document.getElementById("weather").innerHTML =
                        //         'Looks like there was a problem fetching the list. Status Code: ' + response.status;
                        //     return;
                        // }
                    }
                    response.json().then((d)=> {
                        // if (data.error)
                        //     document.querySelector("#data").innerHTML = "Some error occured, is the database initialized?";
                        listProcessor(d);
                    })
                        .catch((err)=>{ console.log('there was an error getting the list ', err);});

                }).catch(function (err) {
                console.log('Fetch Error :', err);
            });
        };




        function listProcessor(list){
            console.log("list: ", list);

            // event.preventDefault() //this will prevent the submitting of the form to the browser
            let table = document.getElementById("table");

            for(item in list){
                let row = document.createElement("tr");
                table.appendChild(row);
                //create a radio button for each item in the table
                let radio = document.createElement("input")
                radio.type = "radio"
                radio.name = "radio"
                row.appendChild(document.createElement("td"))
                row.lastChild.appendChild(radio)

                row.appendChild(document.createElement("td"));
                row.lastChild.innerText = item.address;
                // row.lastChild.innerText = document.getElementById("address").value;

                row.appendChild(document.createElement("td"));
                row.lastChild.innerText = item.lon;
                // row.lastChild.innerText = document.getElementById("longitude").value;

                row.appendChild(document.createElement("td"));
                row.lastChild.innerText = item.lat;
                // row.lastChild.innerText = document.getElementById("latitude").value;

                //create a 'remove' button for each item in the table
                let remove = document.createElement("button");
                remove.type = "button";
                remove.className = "form-control btn btn-light";
                remove.innerText = "remove";
                row.appendChild(document.createElement("td"))
                row.lastChild.appendChild(remove);

            }

            if(list.length > 0){
                document.getElementById("list").style.display = "block";
            }

            // //display the table if it is not empty
            // if(document.getElementById("list").style.display === "none"){
            //     document.getElementById("list").style.display = "block";
            // }
            // //reset the form, so the user will be able to add new data
            // document.getElementById("form").reset();

        }

        //============================================================================
        //a function that handles the press on a button (the remove button or show button)
        //============================================================================

        function buttonHandler(event){

            if(event.target.innerText === "remove") {
                event.target.parentElement.parentElement.remove() //remove that row from the table
            }

            //the table is empty (has just the thead row) -> display = "none"
            if(document.getElementById("table").childElementCount <= 1){
                document.getElementById("list").style.display = "none";
            }

            else if(event.target.innerText === "show"){
                let radioBottuns = document.getElementsByName("radio");
                for(r of radioBottuns){
                    if(r.checked){
                        let lon =  r.parentElement.parentElement.childNodes[2].innerText;
                        let lat =  r.parentElement.parentElement.childNodes[3].innerText;
                        myFetch(lon, lat);
                        return;
                    }
                }

            }
        }

        //============================================================================
        //a function that gets (lon, lat) and gets the weather from 7timer site
        //============================================================================

        function myFetch(lon, lat) {

            let url = new URL('http://www.7timer.info/bin/api.pl');
            url.search = new URLSearchParams({'lon': lon, 'lat':lat, 'product':'civillight', 'output':'json'});

            //get the weather
            fetch(url).then(
                function (response) {
                    // handle the error
                    if (response.status !== 200) {
                        document.getElementById("weather").innerHTML = 'Looks like there was a problem. Status Code: ' +
                            response.status;
                        return;
                    }
                    response.json().then(weatherProcessor);}
            )
                .catch(function (err) {
                    console.log('Fetch Error :', err);
                });

            //get the picture
            url = new URL('http://www.7timer.info/bin/astro.php');
            url.search = new URLSearchParams({'lon': lon, 'lat':lat, 'ac':0, 'lang':'en', 'unit':'metric','output':'internal', 'tzshift':0});

            let image = document.createElement("img");
            image.src = url;
            image.onerror = ()=> {
                image.src = "weather.jpg";
                image.title = "default image displayed do to en error"
            }
            document.getElementById("image").appendChild(image);
        }


        //============================================================================
        //a function that process out the data from the jason
        //============================================================================

        function weatherProcessor(json){
            document.getElementById("weather").style.display = "block";

            //clear the weather of last time
            let result = document.getElementById("result");
            while (result.hasChildNodes())
                result.removeChild(result.lastChild)

            //process the weather out of the jason
            for (i in json.dataseries){
                let row = document.createElement("tr");
                result.appendChild(row);
                row.appendChild(document.createElement("td"))
                row.lastChild.innerText = ((str)=>{ return str.slice(6, 8) +'/'+ str.slice(4, 6)+'/'+ str.slice(0, 4)})
                (json.dataseries[i]["date"].toString())
                row.appendChild(document.createElement("td"))
                row.lastChild.innerText = json.dataseries[i]["weather"]
                row.appendChild(document.createElement("td"))
                row.lastChild.innerText = "max: " + json.dataseries[i]["temp2m"]["max"]
                    + ", min: " + json.dataseries[i]["temp2m"]["min"]
                row.appendChild(document.createElement("td"))
                if(json.dataseries[i]["wind10m_max"] !== 1) {
                    row.lastChild.innerText = json.dataseries[i]["wind10m_max"]
                }
            }
        }

        document.addEventListener('DOMContentLoaded', function () {
            console.log("before executing foo");
            fetch_locations_list();
            // document.getElementById("form").addEventListener("submit", add2list);
            document.getElementById("list").addEventListener("click", buttonHandler);
        }, false);

    }())

</script>
</head>

<body>

<div class="container">
    <div class="row">
        <h1 style="text-align: center; background-color: lightgray" >Hi <%=userName%>, welcome to our weather site</h1>
<!--        <label for="logout">log out from the site</label>-->
        <button type="button" class="btn btn-secondary" id="logout" onclick="location.href='../login'">Log out</button>
        
        <div class="col-12 col-md-6">
            <form id="form" method="POST" action="/api/add">
                <div class="row">
                    <div class="col-4 col-md-3">
                        <div class="form-group">
                            <label for="address">Address:</label>
                            <input type="text" class="form-control" id="address" name="address" required>
                        </div>
                    </div>
                    <div class="col-4 col-md-3">
                        <div class="form-group">
                            <label for="longitude">Longitude:</label>
                            <input type="number" class="form-control" id="longitude" name="longitude" step="any" min="-180" max="180" required>
                        </div>
                    </div>
                    <div class="col-4 col-md-3">
                        <div class="form-group">
                            <label for="latitude">Latitude:</label>
                            <input type="number" class="form-control" id="latitude" name="latitude" step="any" min="-90" max="90" required>
                        </div>
                    </div>
                    <div class="col-4 col-md-3">
                        <div class="form-group">
                            <label for="add_button">Add to list:</label>
                            <button type="submit" class="form-control btn btn-light" id="add_button">Add</button>
                        </div>
                    </div>
                </div>
            </form>
        </div>
        <div class="col-12 col-md-6" id="list" style="display:none">
            <table class="table" id="table">
                <thead>
                <tr>
                    <th scope="col">Select</th>
                    <th scope="col">Address</th>
                    <th scope="col">Longitude</th>
                    <th scope="col">Latitude</th>
                    <th scope="col">Remove button</th>
                </tr>
                </thead>
            </table>
            <label for="show">Show weather results</label>
            <button type="button" class="btn btn-light" id="show">show</button>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-12 col-md-6">
        <div id="weather" style="background-color:lightgray; display: none">
            <h2>Weather result for the next 7 days:</h2>
            <table class="table">
                <thead>
                <tr>
                    <th scope="col">Date</th>
                    <th scope="col">Weather</th>
                    <th scope="col">temperature</th>
                    <th scope="col">wind speed</th>
                </tr>
                </thead>
                <tbody id="result"></tbody>
            </table>
        </div>
    </div>
    <div class="col-12 col-md-6" id="image"></div>
</div>
</body>
</html>